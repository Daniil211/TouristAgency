@page "/tours/search"
@using Application.Web.Client.Data.Repository
@inject IRepository _db

<div class="row">
    <div class="col">
        <h1 class="text-info">Search Tour</h1>
    </div>
</div>

<div class="row">
    <div class="col-sm-12 col-md-6">
        <input type="text" class="form-control mb-2" placeholder="Enter Tour Name..." @bind-value="tourName" @bind-value:event="oninput" 
               @onkeypress="((KeyboardEventArgs args)=> TourNameKeyPressHandler(args))" />
        <select class="form-control mb-2" @bind="selectedGameGenre">
            <option value="-1">-- Select Transport Tour --</option>
            @foreach (var item in Genres)
            {
                <option value="@item.TransportId">@item.TypeOfTransport</option>  
            }
        </select>
        <div class="row mb-2">
            <div class="col">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="featureReleaseId" @bind="featureRelease" />
                    <label class="custom-control-label" for="featureReleaseId">Future Release?</label>
                </div>
            </div>
            <div class="col">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="canBayId" @bind="canBay" />
                    <label class="custom-control-label" for="canBayId">Can Bay The Game?</label>
                </div>
            </div>
        </div>
        <button type="button" class="btn btn-outline-primary form-control mb-2" @onclick="SearchTheTour">Search Tour</button>
        <button type="button" class="btn btn-outline-danger form-control mb-2" @onclick="ResetValues">Reset</button>
    </div>
    <div class="col-sm-12 col-md-6">
        <div class="border border-primary rounded p-4">
            <p>Tour Name: @tourName</p>
            <p>Genre Choosed: @selectedGameGenre</p>
            <p>Future Release?: @featureRelease</p>
            <p>Can Bay?: @canBay</p>
        </div>
    </div>
</div>

<div class="border border-success rounded p-3 my-3 mx-1">
    <GameList ListOfItems="Games"/>
</div>

@code {
    string tourName = string.Empty;
    string selectedGameGenre = "-1";
    List<Transport> Genres = new();
    List<Tour> Games = new();
    bool featureRelease = false;
    bool canBay = false;

    void TourNameKeyPressHandler(KeyboardEventArgs args)
    {
        //if(args.Key == "Enter")
            //TODO: Search
    }

    protected override void OnInitialized()
    {
        Genres = _db.GetAllTransport();
    }

    void SearchTheTour()
    {
        Games = _db.GetAllTours();

        if (!string.IsNullOrWhiteSpace(tourName))
            Games = Games.Where(x => x.TourName.ToLower().Contains(tourName.ToLower())).ToList();
        if (featureRelease)
            Games = Games.Where(x => x.Time > DateTime.Now).ToList();
        if (canBay)
            Games = Games.Where(x => x.Time <= DateTime.Now).ToList();
    }

    void ResetValues()
    {
        tourName = string.Empty;
        selectedGameGenre = "-1";
        featureRelease = false;
        canBay = false;

        Games = new();
    }
}
