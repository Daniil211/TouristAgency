@using Application.Web.Client.Data.Authentication;
@inject IMessageService _message
@inject WebsiteAuthenticator WebsiteAuthenticator
@page "/"

<AuthorizeView Context="Admin">
    <NotAuthorized>
        <div>
            <Switch @bind-Checked="switchValue" />
        </div>
        Войти/Зарегаться
        @if (!switchValue)
        {
            <EditForm Model="LoginFormModel" Context="Login">
                <div>
                    <label>
                        Username:
                        <InputText @bind-Value="LoginFormModel.Username"></InputText>
                    </label>
                </div>
                <div>
                    <label>
                        Password:
                        <InputText type="password" @bind-Value="LoginFormModel.Password"></InputText>
                    </label>
                </div>
                <div>
                    <button @onclick="TryLogin">Submit</button>
                </div>
            </EditForm>
        }
        else
        {
            <EditForm Model="regFormModel" Context="Reg">
                <div>
                    <label>
                        Username:
                        <InputText @bind-Value="regFormModel.Name"></InputText>
                    </label>
                </div>
                <div>
                    <label>
                        Password:
                        <InputText type="password" @bind-Value="regFormModel.Password"></InputText>
                    </label>
                </div>
                <div>
                    <label>
                        Confirm password:
                        <InputText type="password" @bind-Value="regFormModel.PasswordConfirm"></InputText>
                    </label>
                </div>
                <div>
                    <label>
                        Select role:
                        <Select DataSource="_roles" type="role" @bind-Value="regFormModel.Role"></Select>
                    </label>
                </div>
                <div>
                    <button @onclick="TryReg">Submit</button>
                </div>
            </EditForm>
        }
    </NotAuthorized>
    <Authorized>
        <style>
            body {
                background: url(https://bootstraptema.ru/images/bg/bg-1.png)
            }

            #main {
                background-color: #f2f2f2;
                padding: 20px;
                -webkit-border-radius: 4px;
                -moz-border-radius: 4px;
                -ms-border-radius: 4px;
                -o-border-radius: 4px;
                border-radius: 4px;
                border-bottom: 4px solid #ddd;
            }

            #real-estates-detail #author img {
                -webkit-border-radius: 100%;
                -moz-border-radius: 100%;
                -ms-border-radius: 100%;
                -o-border-radius: 100%;
                border-radius: 100%;
                border: 5px solid #ecf0f1;
                margin-bottom: 10px;
            }

            #real-estates-detail .sosmed-author i.fa {
                width: 30px;
                height: 30px;
                border: 2px solid #bdc3c7;
                color: #bdc3c7;
                padding-top: 6px;
                margin-top: 10px;
            }

            .panel-default .panel-heading {
                background-color: #fff;
            }

            #real-estates-detail .slides li img {
                height: 450px;
            }
        </style>
        <div class="container">
            <div id="main">
                <div class="row" id="real-estates-detail">
                    <div class="panel-body">
                        <div class="text-center" id="author">
                            <img src="https://bootstraptema.ru/snippets/element/2016/profilesection/myprofile.jpg">
                            @if (User != null)
                            {
                                <h3>@User.Username</h3>
                            }
                            <small class="label label-warning">Российская Федерация</small>
                            <p>Я простой Русский пацан и мне всё по барабану.</p>
                            <p class="sosmed-author">
                                <a href="#"><i class="fa fa-facebook" title="Facebook"></i></a>
                                <a href="#"><i class="fa fa-twitter" title="Twitter"></i></a>
                                <a href="#"><i class="fa fa-google-plus" title="Google Plus"></i></a>
                                <a href="#"><i class="fa fa-linkedin" title="Linkedin"></i></a>
                            </p>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-4 col-xs-12">
                        <h4>История профиля</h4>
                        <table class="table table-th-block">
                            <tbody>
                            @if (User != null)
                            {
                                <tr><td class="active">Зарегистрирован:</td><td>@User?.DateCreated.ToString()</td></tr>
                                <tr><td class="active">Логин:</td><td>@User?.Username</td></tr>
                                <tr><td class="active">Роль:</td><td>@User?.Role</td></tr>
                                <tr><td class="active">Пароль:</td><td>@User?.Password</td></tr>
                                <tr><td class="active">Пол:</td><td>@((bool)User?.Sex ? "Женский" : "Мужской")</td></tr>
                                <tr><td class="active">Полных лет:</td><td>@User?.Age</td></tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <Authorizing>
        Authorizing in process...
    </Authorizing>
</AuthorizeView>

@code {
    [Inject]
    private NavigationManager _navi { get; set; }

    [Inject]
    private ICurrentUserService _currentUserService { get; set; }

    private LoginFormModel LoginFormModel { get; set; } = new();

    private RegFormModel regFormModel { get; set; } = new();

    private bool switchValue { get; set; }

    private User User => _currentUserService.AuthorizedUser!;

    private readonly List<string> _roles = new List<string>
    {
        "Admin",
        "Studio",
        "User"
    };

    private async Task TryLogin()
    {
        await WebsiteAuthenticator.LoginAsync(LoginFormModel);
        _navi.NavigateTo("/");
    }

    private async Task TryReg()
    {
        if (regFormModel.PasswordConfirm == regFormModel.Password)
        {
            await WebsiteAuthenticator.RegAsync(regFormModel);

            await WebsiteAuthenticator.LoginAsync(new LoginFormModel()
                {
                    Username = regFormModel.Name,
                    Password = regFormModel.Password
                });
            _navi.NavigateTo("/");
        }
        else
        {
            _message.Error("Пароли не совпадают!");
        }
    }

}
