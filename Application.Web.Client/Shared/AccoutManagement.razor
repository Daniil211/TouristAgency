@using Application.Web.Client.Data.Authentication;
@using Application.Web.Client.Data.Repository
@inject IMessageService _message
@inject WebsiteAuthenticator WebsiteAuthenticator
@inject NavigationManager NavigationManager
@page "/"
@inject IRepository _db

<AuthorizeView Context="Account">
    <NotAuthorized>
        <div>
            <Switch @bind-Checked="switchValue" />
        </div>
        Войти/Зарегаться
        @if (!switchValue)
        {
            <EditForm Model="LoginFormModel" Context="Login">
                <div>
                    <label>
                        Username:
                        <InputText @bind-Value="LoginFormModel.Username"></InputText>
                    </label>
                </div>
                <div>
                    <label>
                        Password:
                        <InputText type="password" @bind-Value="LoginFormModel.Password"></InputText>
                    </label>
                </div>
                <div>
                    <button @onclick="TryLogin">Submit</button>
                </div>
            </EditForm>
        }
        else
        {
            <EditForm Model="regFormModel" Context="Reg">
                <div>
                    <label>
                        Username:
                        <InputText @bind-Value="regFormModel.Name"></InputText>
                    </label>
                </div>
                <div>
                    <label>
                        Password:
                        <InputText type="password" @bind-Value="regFormModel.Password"></InputText>
                    </label>
                </div>
                <div>
                    <label>
                        Confirm password:
                        <InputText type="password" @bind-Value="regFormModel.PasswordConfirm"></InputText>
                    </label>
                </div>
                @*<div>
            <label>
            Select role:
            <Select DataSource="_roles" type="role" @bind-Value="regFormModel.Role"></Select>
            </label>
            </div>*@
                <div>
                    <label>
                        Full Name:
                        <InputText @bind-Value="regFormModel.FIO"></InputText>
                    </label>
                </div>
                <div>
                    <label>
                        Select a date:
                        <AntDesign.DatePicker @bind-Value="regFormModel.Date"></AntDesign.DatePicker>
                    </label>
                </div>
                <div>
                    <label>
                        Phone:
                        <InputText @bind-Value="regFormModel.Phone"></InputText>
                    </label>
                </div>
                <div>
                    <button @onclick="TryReg">Submit</button>
                </div>
            </EditForm>
        }
    </NotAuthorized>
    <Authorized>
        <style>
            body {
                background: url(https://bootstraptema.ru/images/bg/bg-1.png)
            }

            #main {
                background-color: #f2f2f2;
                padding: 20px;
                -webkit-border-radius: 4px;
                -moz-border-radius: 4px;
                -ms-border-radius: 4px;
                -o-border-radius: 4px;
                border-radius: 4px;
                border-bottom: 4px solid #ddd;
            }

            #real-estates-detail #author img {
                -webkit-border-radius: 100%;
                -moz-border-radius: 100%;
                -ms-border-radius: 100%;
                -o-border-radius: 100%;
                border-radius: 100%;
                border: 5px solid #ecf0f1;
                margin-bottom: 10px;
            }

            #real-estates-detail .sosmed-author i.fa {
                width: 30px;
                height: 30px;
                border: 2px solid #bdc3c7;
                color: #bdc3c7;
                padding-top: 6px;
                margin-top: 10px;
            }

            .panel-default .panel-heading {
                background-color: #fff;
            }

            #real-estates-detail .slides li img {
                height: 450px;
            }
        </style>
        <div class="container">
            <div id="main">
                <div class="row" id="real-estates-detail">
                    <div class="panel-body">
                        <div class="text-center" id="author">
                            <img height="250px" src="https://static.vecteezy.com/system/resources/previews/005/544/718/original/profile-icon-design-free-vector.jpg">
                            @if (User != null)
                            {
                                <h3>@User.Username</h3>
                            }
                            <small class="label label-warning">Russian Federation</small>
                            <p>@User?.Phone.ToString()</p>
                            <p class="sosmed-author">
                                <a href="#"><i class="fa fa-facebook" title="Facebook"></i></a>
                                <a href="#"><i class="fa fa-twitter" title="Twitter"></i></a>
                                <a href="#"><i class="fa fa-google-plus" title="Google Plus"></i></a>
                                <a href="#"><i class="fa fa-linkedin" title="Linkedin"></i></a>
                            </p>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-4 col-xs-12">
                        <h4>Profile History</h4>
                        <table class="table table-th-block">
                            <tbody>
                                @if (User != null)
                                {
                                    <tr><td class="active">User Id:</td><td>@User?.Id.ToString()</td></tr>
                                    <tr>
                                        <td class="active">
                                            Registered:
                                        </td>
                                        <td>@User?.DateCreated.ToString()</td>
                                    </tr>
                                    <tr><td class="active">Login:</td><td>@User?.Username</td></tr>
                                    <tr><td class="active">Role:</td><td>@User?.Role</td></tr>
                                    <tr><td class="active">Full years:</td><td>@User?.Age</td></tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h1 class="text-info">My orders</h1>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Order ID</th>
                            <th scope="col">Tour Id</th>
                            <th scope="col">Tour Operator ID</th>
                            <th scope="col">User Id</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in orders)
                        {
                            @if (@item.UserId == @User?.Id)
                            {
                                <tr scope="row">
                                    <td>@item.OrderId</td>
                                    <td>@item.TourId</td>
                                    <td>@item.TourOperatorId</td>
                                    <td>@item.UserId</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </Authorized>
    <Authorizing>
        Authorizing in process...
    </Authorizing>
</AuthorizeView>

@code {
    [Inject]
    private NavigationManager _navi { get; set; }

    [Inject]
    private ICurrentUserService _currentUserService { get; set; }

    private LoginFormModel LoginFormModel { get; set; } = new();

    private RegFormModel regFormModel { get; set; } = new();

    private bool switchValue { get; set; }

    private User User => _currentUserService.AuthorizedUser!;

    List<Order> orders = new();
    protected override void OnInitialized()
    {
        try
        {
            orders = _db.GetAllOrder();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    private readonly List<string> _roles = new List<string>
    {
        "Admin",
        "User"
    };

    private async Task TryLogin()
    {
        await WebsiteAuthenticator.LoginAsync(LoginFormModel);
        _navi.NavigateTo("/");
    }

    private async Task TryReg()
    {
        try
        {
            if (regFormModel.PasswordConfirm == regFormModel.Password)
            {
                await WebsiteAuthenticator.RegAsync(regFormModel);

                await WebsiteAuthenticator.LoginAsync(new LoginFormModel()
                    {
                        Username = regFormModel.Name,
                        Password = regFormModel.Password
                    });
                _navi.NavigateTo("/");
            }
            else
            {
                _message.Error("Пароли не совпадают!");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
