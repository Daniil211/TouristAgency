@using System.Security.Claims
@using Application.Web.Client.Data.Repository
@inject IRepository _db
<EditForm Model="TransportOfTour" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <div class="row">
            <div class="col">
                <h1 class="text-info">New Transport Of Tours:</h1>
            </div>
        </div>
        <div>
            <h3>Tour Id</h3>
            <select class="form-control mb-2" @bind="TransportOfTour.TourId">
                <option>-- Select Tour --</option>
                @foreach (var item in Tour)
                {
                    <option value="@item.TourId">@item.TourName</option>
                }
            </select>
            <ValidationMessage For="(() => TransportOfTour.TourId)"/>
            <h3>Transport Id</h3>
            <select class="form-control mb-2" @bind="TransportOfTour.TransportId">
                <option>-- Select Transport --</option>
                @foreach (var item in Transport)
                {
                    <option value="@item.TransportId">@item.TypeOfTransport</option>
                }
            </select>
            <ValidationMessage For="(() => TransportOfTour.TransportId)"/>
        </div>
    </div>
    <button class="btn btn-outline-primary">Save</button>
</EditForm>

@code {
    [Parameter]
    public TransportOfTour TransportOfTour { get; set; }
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }
    List<Tour> Tour = new();
    List<Transport> Transport = new();
    protected override void OnInitialized()
    {
        Tour = _db.GetAllTours();
        Transport = _db.GetAllTransport();
    }
}
